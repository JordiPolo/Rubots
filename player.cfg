#game
driver
(
  name "gazebo"
  provides ["simulation:0"]
  plugin "libgazeboplugin"
  server_id "default"
)



#robot 1
driver
(
  name "gazebo"
  provides ["position2d:0"]
  gz_id "pioneer2dx_model1::position_iface_0"
)

#driver
#(
#  name "goto"
#  provides ["position2d:0" "dio:0"]
#  requires ["position2d:1"]
#  debug 1
#  reactive 1
#)

driver
(
  name "gazebo"
  provides ["laser:0"]
  gz_id "pioneer2dx_model1::laser::laser_iface_0"
)

driver
(
  name "gazebo"
  provides ["fiducial:0"]
  gz_id "pioneer2dx_model1::laser::fiducial_iface_0"
)

driver
(
  name "gazebo"
  provides ["ptz:0"]
  gz_id "pioneer2dx_model1::cannon::ptz_iface_0"
)

driver
(
  name "gazebo"
  provides ["laser:1"]
  gz_id "pioneer2dx_model1::cannon::cannon_laser"
)

driver
(
  name "gazebo"
  provides ["fiducial:1"]
  gz_id "pioneer2dx_model1::cannon::cannon_fiducial"
)





#robot 2
driver
(
  name "gazebo"
  provides ["position2d:10"]
  gz_id "pioneer2dx_model2::position_iface_0"
)

#driver
#(
#  name "goto"
#  provides ["position2d:10" "dio:10"]
#3  requires ["position2d:11"]
#  debug 1
#  reactive 1
#)


driver
(
  name "gazebo"
  provides ["laser:10"]
  gz_id "pioneer2dx_model2::laser::laser_iface_0"
)

driver
(
  name "gazebo"
  provides ["fiducial:10"]
  gz_id "pioneer2dx_model2::laser::fiducial_iface_0"
)


driver
(
  name "gazebo"
  provides ["ptz:10"]
  gz_id "pioneer2dx_model2::cannon::ptz_iface_0"
)


driver
(
  name "gazebo"
  provides ["laser:11"]
  gz_id "pioneer2dx_model2::cannon::cannon_laser"
)

driver
(
  name "gazebo"
  provides ["fiducial:11"]
  gz_id "pioneer2dx_model2::cannon::cannon_fiducial"
)






#driver
#(
#  name "gazebo"
#  provides ["camera:0"]
#  gz_id "camera_iface_1"
#  alwayson 1
#  save 0
#)

#driver
#(
#  name "gazebo"
#  provides ["power:0"]
#  gz_id "robot1"
#)
#

#
#driver
#(
#  name "gazebo"
#  provides ["sonar:0"]
#  gz_id "robot1"
#)
#
#driver
#(
#  name "gazebo"
#  provides ["ptz:0"]
#  gz_id "camera1"
#)
#

#
#driver
#(
#  name "gazebo"
#  provides ["gripper:0"]
#  gz_id "gripper1"
#)
#

#driver
#(
#  name "gz_stereo"
#  provides ["left_disparity::camera:1"]
#  gz_id "stereo1"
#)
